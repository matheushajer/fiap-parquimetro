apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: citus
  labels:
    app: citus
  annotations:
    reloader.stakater.com/auto: 'true'
spec:
  selector:
    matchLabels:
      app: citus
  serviceName: citus
  replicas: 1
  template:
    metadata:
      labels:
        app: citus
    spec:
      serviceAccountName: pipeline
      ##########################################
      #         reset key perm
      initContainers:
      - name: fix-permissions
        command:
          - sh
          - '-c'
          - >-
            addgroup -g 70 postgres && adduser -D -u 70 -G postgres postgres &&
            chown -R postgres:postgres /var/lib/postgresql/data && chmod -R 0775 /var/lib/postgresql/data
        volumeMounts:
          - name: data
            mountPath: /var/lib/postgresql/data
        image: 'busybox:1.32'
      ##########################################
      #         main container
      containers:
      - name: postgres
        image: citusdata/citus:11.0.2-alpine
        imagePullPolicy: IfNotPresent
        args:
        - sh
        - -c
        - |
          sh <<'SH' &
          node_name=citus.${POD_NAMESPACE}.svc.cluster.local;
          
          echo [$(date -Iseconds)] Wait pg_isready;
          timeout 5m sh -c 'until pg_isready -U postgres --timeout=5 --quiet; do sleep 2; done;';
          pg_isready -U postgres --quiet || { echo pg not ready; kill -9 1; exit 1; };
          echo [$(date -Iseconds)] pg is ready;
          # wait for extension
          sleep 5;

          echo [$(date -Iseconds)] Wait name resolve ${node_name};
          timeout 1m sh -c "until nslookup ${node_name} > /dev/null; do sleep 2; done;";
          nslookup ${node_name} > /dev/null || { echo Name not ready; kill -9 1; exit 1; }
          
          echo [$(date -Iseconds)] citus_set_coordinator_host ${node_name};
          su-exec postgres psql -c "SELECT * from citus_set_coordinator_host('${node_name}', 5432);"  || {
            echo citus_set_coordinator_host failed;
            kill -9 1;
          }
          SH
          
          su-exec postgres "/usr/local/bin/docker-entrypoint.sh" "postgres" \
          -c wal_level=replica \
          -c config_file=/etc/postgres/postgresql.conf \
          -c hba_file=/etc/postgres/pg_hba.conf \
          ;

        ports:
        - containerPort: 5432
          name: postgres
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 500Mi
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: citus-secrets
              key: password
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: citus-secrets
              key: password
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        - name: conf
          mountPath: "/etc/postgres"
          readOnly: true

        livenessProbe:
          exec:
            command:
            - 'pg_isready'
            - '-U'
            - 'postgres'
            - '--timeout=5'
            - '--quiet'
          initialDelaySeconds: 60

      - name: pgbouncer
        image: bitnami/pgbouncer:1.17.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6432
          name: pgbouncer
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 500Mi
        env:
        - name: POSTGRESQL_HOST
          value: citus
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: citus-secrets
              key: password
        - name: PGBOUNCER_AUTH_TYPE
          value: trust
        - name: PGBOUNCER_CLIENT_TLS_SSLMODE
          value: disable
        - name: PGBOUNCER_IGNORE_STARTUP_PARAMETERS
          value: extra_float_digits
          readOnly: true

        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
      volumes:
      - name: conf
        configMap:
          name: citus-conf

  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: citus
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: gp2
      resources:
        requests:
          storage: 3Gi
